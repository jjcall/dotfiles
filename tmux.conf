# use powerline: https://github.com/Lokaltog/powerline
source '/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'

# ubind some default keybindings
unbind C-b

# set prefix key to ctrl-a
set -g prefix C-a

# pass through a ctrl-a if you press it twice
bind C-a send-prefix

# lower command delay
set -sg escape-time 1

# start first window and pane at 1, not zero
set -g base-index 1
set -g pane-base-index 1

# be notified when there is activity in one of your windows
set-window-option -g monitor-activity on

# bind r to reloading the config file
bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."

# don't rename windows automatically
set-window-option -g automatic-rename off

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# open a man page in new window
bind-key / command-prompt "split-window 'exec man %%'"

# quick view of processes
bind-key "~" split-window "exec htop"

# navigate using vim-style keys
setw -g mode-keys vi

# splitting
unbind %
bind v split-window -h
unbind '"'
bind s split-window -v

# vim style for pane movement
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# swap panes
bind-key -n C-b swap-pane -D

# shift-movement keys will resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# kill windows
bind k confirm kill-window
bind K confirm kill-server

# set up aliases for temporarily maximizing panes
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp

unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# copy/paste using vim-style keys
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

set-option -g default-command "reattach-to-user-namespace -l zsh"

# turn on 256 color support
set -g default-terminal "screen-256color"

# change color of active window
setw -g window-status-current-fg white
setw -g window-status-current-bg colour88
setw -g window-status-current-attr bright

# set color of regular and active panes
set -g pane-border-fg colour238
set -g pane-border-bg default
set -g pane-active-border-fg green
set -g pane-active-border-bg default

