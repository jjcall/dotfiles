snippet "^#!" "#!/usr/bin/env ruby" r
#!/usr/bin/env ruby
$0
endsnippet

snippet rr "Require relative"
require_relative '$1'
$0
endsnippet

snippet if "if <condition> ... end"
if ${1:condition}
	$0
end
endsnippet

snippet @ "set instance var"
@$1 = ${2:$1}
endsnippet

snippet defi "def initialize ..."
def initialize${1: ${2:*args}}
	$0
end
endsnippet

snippet "\b(de)?f" "def <name>..." r
def ${1:function_name}${2: ${3:*args}}
	$0
end
endsnippet

snippet desc "describe"
describe "$1" do
	$0
end
endsnippet

snippet it "it"
it "$1" do
	$0
end
endsnippet

snippet re "require"
require '$1'
$0
endsnippet

snippet mod "module"
module $1
	$0
end
endsnippet

snippet cont
context "$1" do
	$0
end
endsnippet

snippet rsh
require 'spec_helper'
endsnippet

snippet let
let(:$1) { $0 }
endsnippet

snippet let!
let!(:$1) { $0 }
endsnippet

snippet ex
expect($1).to $0
endsnippet

snippet descf
describe "$1", :type => :feature do
	$0
end
endsnippet

